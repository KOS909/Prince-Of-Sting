class Program
{
        DiscordSocketClient _518913662610571276;
 CommandHandler _handler;
static void Main(string[] args)
 => new Program().StartAsync().GetAwaiter().GetResult();
 public async Task StartAsync()
 {
   if (Config.bot.token == NTE4OTEzNjYyNjEwNTcxMjc2.Dx4Fwg.jSVU3yje_1CaIj-7tPxylaW1EvI || Config.bot.token == null) return;
   _client = new DiscordSocketClient(new DiscordSocketConfig
   {
     LogLevel = LogSeverity.Verbose
});
 _client.Log += Log;
   _client.Ready += RepeatingTimer.StartTimer;
    _client.ReactionAdded += OnReactionAdded;
    await _client.LoginAsync(TokenType.Bot, Config.bot.token);
    await _client.StartAsync();
    Global.Client = _client;
    _handler = new CommandHandler();
        await _handler.InitializeAsync(_client);
	 ConsoleInput();
     await Task.Delay(-1);
     }
       private async Task ConsoleInput()
       {
         var input = string.Empty;
           while (input.Trim().ToLower() != "block")
           {
           input = Console.ReadLine();
                           if (input.Trim().ToLower() == "?-help")
                            ConsoleSendMessage();
                            }
                            }
                             private async void ConsoleSendMessage()
                             Console.WriteLine("select the guild");
                             var guild = GetSelectedGuild(_client.Guilds);
	var textChannel = GetSelectedTextChannel(guild.TextChannels);
	            var msg = string.Empty;  while (msg.Trim() == string.Empty)
	            {
	                Console.WriteLine("We dont have any commands yet, sry m8, come back soon. REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE:");
	                msg = Console.ReadLine();
	            }
	
	            await textChannel.SendMessageAsync(msg)  private SocketTextChannel GetSelectedTextChannel(IEnumerable<SocketTextChannel> channels)
	        {
	            var textChannels = channels.ToList();
	            var maxIndex = textChannels.Count - 1;
	            for (var i = 0; i <= maxIndex; i++)
	            {
	                Console.WriteLine($"{i} - {textChannels[i].Name}");
	            }
	
	            var selectedIndex = -1;
	            while (selectedIndex < 0 || selectedIndex > maxIndex)
	            {
	                var success = int.TryParse(Console.ReadLine().Trim(), out selectedIndex);
	                if (!success)
	                {
	                    Console.WriteLine("That was an invalid index, try again.");
	                    selectedIndex = -1;
	                }
	            }
	
	            return textChannels[selectedIndex];
	        }
	
	        private SocketGuild GetSelectedGuild(IEnumerable<SocketGuild> guilds)
	        {
	            var socketGuilds = guilds.ToList();
	            var maxIndex = socketGuilds.Count - 1;
	            for(var i = 0; i <= maxIndex; i++)
	            {
	                Console.WriteLine($"{i} - {socketGuilds[i].Name}");
	            }
	
	            var selectedIndex = -1;
	            while (selectedIndex < 0 || selectedIndex > maxIndex)
	            {
	                var success = int.TryParse(Console.ReadLine().Trim(), out selectedIndex);
	                if (!success)
	                {
	                    Console.WriteLine("That was an invalid index, try again.");
	                    selectedIndex = -1;
	                }
	            }
	
	            return socketGuilds[selectedIndex];
	        }
	
	        private async Task OnReactionAdded(Cacheable<IUserMessage, ulong> cache, ISocketMessageChannel channel, SocketReaction reaction)
	        {
	            if(reaction.MessageId == Global.MessageIdToTrack)
